#include <iostream>
#include <algorithm>

struct Rectangle {
    int x1, y1, x2, y2;
};

int calculateOverlapArea(Rectangle rect1, Rectangle rect2) {
    int x1 = std::max(rect1.x1, rect2.x1);
    int y1 = std::max(rect1.y1, rect2.y1);
    int x2 = std::min(rect1.x2, rect2.x2);
    int y2 = std::min(rect1.y2, rect2.y2);

    if (x1 < x2 && y1 < y2) {
        return (x2 - x1) * (y2 - y1);
    } else {
        return 0;
    }
}

int main() {
    Rectangle rect1, rect2;

    for (int i = 0; i < 2; ++i) {
        std::cin >> rect1.x1 >> rect1.y1;
        std::cin >> rect1.x2 >> rect1.y2;

        std::cin >> rect2.x1 >> rect2.y1;
        std::cin >> rect2.x2 >> rect2.y2;

        int overlapArea = calculateOverlapArea(rect1, rect2);

        std::cout << "The area of the overlapped portion is: " << overlapArea << std::endl;
    }

    return 0;
}
